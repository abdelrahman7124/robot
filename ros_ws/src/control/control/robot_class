#!/usr/bin/env python

import rclpy
from rclpy.node import Node
from std_msgs.msg import Float32

class Robot(Node):
    def __init__(self):
        super().__init__('robot_node')
        self.distance = 0.0
        self.distance_subscriber = self.create_subscription(Float32,'distance',self.distance_callback,10)
        self.distances=[]
        self.paths=0

    def distance_callback(self, msg):
        self.distance = msg.data
        self.assign_distance(self.distance)
        self.paths +=1
        
    def get_distance(self):
        return self.distance
    
    def assign_distance(self,distance):
        self.distances[self.paths]=distance

    def calculate_smallest_distance(self):
        return min(self.distances)

def main(args=None):
    rclpy.init(args=args)
    robot = Robot()
    rclpy.spin(robot)
    robot.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()